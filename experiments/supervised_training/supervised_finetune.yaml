trainer:
  _target_: pytorch_lightning.Trainer
  benchmark: True
  max_epochs: 100
  check_val_every_n_epoch: 5
  accelerator: gpu
  devices: 1
  # sync_batchnorm: True
  # precision: 16
  log_every_n_steps: 1
  logger: 
    _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: ./logs
    name: supervised_finetune

  callbacks:
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      dirpath:  ./checkpoints
      verbose: True
      save_last: True
      every_n_epochs: 1
      save_on_train_epoch_end: True

    # - _target_: lighter.callbacks.LighterLogger
    #   project: ssl_radiomics_pretrain
    #   log_dir: ./logs
    #   tensorboard: False
    #   wandb: False
    #   input_type: image
    #   pred_type: histogram
    #   max_samples: 10


system:
    _target_: lighter.LighterSystem
    batch_size: 8
    pin_memory: True
    drop_last_batch: True 
    num_workers: 3
    model:
        _target_: fmcib.ssl.models.LoadPretrainedResnet3D
        pretrained: "./models/supervised/task1_supervised.torch" 
        heads: [4096, 2048, 1] 

    post_criterion_activation: "$torch.sigmoid" 
    cast_target_dtype_to: "$torch.float32"
    criterion:
        _target_: torch.nn.BCEWithLogitsLoss 

    optimizers:
        _target_: torch.optim.SGD
        params: "$@system#model.parameters()"
        lr: "$((@system#batch_size * @trainer#devices)/256) * 0.1" # Compute LR dynamically for different batch sizes
        weight_decay: 0.0
        momentum: 0.9

    schedulers:
      scheduler:
        _target_: torch.optim.lr_scheduler.StepLR
        optimizer: "@system#optimizers"
        step_size: 30
      strict: True

    train_metrics: 
        - _target_: torchmetrics.AveragePrecision
          task: binary

        - _target_: torchmetrics.AUROC
          task: binary 


    val_metrics: "@system#train_metrics"
    test_metrics: "@system#train_metrics"

    train_dataset:
        _target_: fmcib.datasets.SSLRadiomicsDataset
        path: "./data/preprocessing/luna16/annotations/task2_train.csv"  # Note: Change path
        label: "malignancy" # Note: Change to appropriate label column, e.g.  "survival" for Task 3
        radius: 25
        orient: False 
        resample_spacing: [1, 1, 1]
        enable_negatives: False
        transform:
            _target_: monai.transforms.Compose
            transforms:
                - _target_: monai.transforms.ToTensor
                - _target_: monai.transforms.AddChannel
                - _target_: monai.transforms.SpatialPad
                  spatial_size: [50, 50, 50]
                - _target_: monai.transforms.RandGaussianSmooth
                  prob: 0.5
                - _target_: monai.transforms.RandAffine
                  prob: 0.5
                  translate_range: [10, 10, 10]
                - _target_: monai.transforms.RandAxisFlip
                  prob: 0.5
                - _target_: monai.transforms.RandRotate90
                  prob: 0.5
                - _target_: monai.transforms.NormalizeIntensity
                  subtrahend: -1024
                  divisor: 3072

    val_dataset:
        _target_: fmcib.datasets.SSLRadiomicsDataset
        path: "./data/preprocessing/luna16/annotations/task2_val.csv"  # Note: Change path
        label: "@system#train_dataset#label"
        radius: "@system#train_dataset#radius"
        orient: "@system#train_dataset#orient"
        resample_spacing: "@system#train_dataset#resample_spacing"
        enable_negatives: "@system#train_dataset#enable_negatives"
        transform:
            _target_: monai.transforms.Compose
            transforms:
                - _target_: monai.transforms.ToTensor
                - _target_: monai.transforms.AddChannel
                - _target_: monai.transforms.SpatialPad
                  spatial_size: [50, 50, 50]
                - _target_: monai.transforms.NormalizeIntensity
                  subtrahend: -1024
                  divisor: 3072
                  
    test_dataset:
        _target_: fmcib.datasets.SSLRadiomicsDataset
        path: "./data/preprocessing/luna16/annotations/task2_test.csv"  # Note: Change path
        label: "@system#train_dataset#label"
        radius: "@system#train_dataset#radius"
        orient: "@system#train_dataset#orient"
        resample_spacing: "@system#train_dataset#resample_spacing"
        enable_negatives: "@system#train_dataset#enable_negatives"
        transform:
            _target_: monai.transforms.Compose
            transforms:
                - _target_: monai.transforms.ToTensor
                - _target_: monai.transforms.AddChannel
                - _target_: monai.transforms.SpatialPad
                  spatial_size: [50, 50, 50]
                - _target_: monai.transforms.NormalizeIntensity
                  subtrahend: -1024
                  divisor: 3072        
    
    predict_dataset:
        _target_: fmcib.datasets.SSLRadiomicsDataset
        path: "./data/preprocessing/luna16/annotations/task2_test.csv"  # Note: Change path
        label: "@system#train_dataset#label"
        radius: "@system#train_dataset#radius"
        orient: "@system#train_dataset#orient"
        resample_spacing: "@system#train_dataset#resample_spacing"
        enable_negatives: "@system#train_dataset#enable_negatives"
        transform:
            _target_: monai.transforms.Compose
            transforms:
                - _target_: monai.transforms.ToTensor
                - _target_: monai.transforms.AddChannel
                - _target_: monai.transforms.SpatialPad
                  spatial_size: [50, 50, 50]
                - _target_: monai.transforms.NormalizeIntensity
                  subtrahend: -1024
                  divisor: 3072      